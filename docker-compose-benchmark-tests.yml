version: "3.9"

services:
  email-service:
    build:
      context: .
      dockerfile: apps/email-service/Dockerfile
    environment:
      - EMAIL_SERVICE_HOST=email-service
      - GRPC_EMAIL_SERVICE_PORT=7061
      - WEATHER_SERVICE_HOST=weather-service
      - GRPC_WEATHER_SERVICE_PORT=7063
      - EMAIL_HOST=weather-test-mailer
      - EMAIL_PORT=1025
      - EMAIL_USER=
      - EMAIL_PASS=
      - EMAIL_FROM=test@example.com
      - EMAIL_TLS=false
    ports:
      - "7061:7061"
    volumes:
      - ./shared:/app/shared:ro
    networks:
      - test-network

  weather-service:
    build:
      context: .
      dockerfile: apps/weather-service/Dockerfile
    env_file:
      - .env
    environment:
      - WEATHER_SERVICE_HOST=weather-service
      - GRPC_WEATHER_SERVICE_PORT=7063
      - HTTP_WEATHER_SERVICE_PORT=7064
      - CACHE_TTL=1000
      - REDIS_HOST=weather-test-cache
      - REDIS_PORT=6379
    ports:
      - "7063:7063"
      - "7064:7064"
    depends_on:
      - weather-test-cache
    volumes:
      - ./apps/weather-service/logs:/app/apps/weather-service/logs
      - ./shared:/app/shared:ro
    networks:
      - test-network

  weather-test-cache:
    image: redis:7-alpine
    container_name: weather-test-cache
    ports:
      - "6379:6379"
    environment:
      - REDIS_PORT=6379
      - REDIS_HOST=localhost
      - CACHE_TTL=60
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - test-network

  weather-test-mailer:
    image: mailhog/mailhog
    container_name: weather-test-mailer
    ports:
      - "8025:8025"
    networks:
      - test-network

networks:
  test-network:
    driver: bridge
