version: "3.9"

services:
  subscription-service:
    build:
      context: .
      dockerfile: apps/subscription-service/Dockerfile
    env_file:
      - .env
    ports:
      - "${HTTP_SUBSCRIPTION_SERVICE_PORT}:7082"
    depends_on:
      - db
      - email-service
      - weather-service
    volumes:
      - ./shared:/app/shared:ro
    networks:
      - app-network
    restart: unless-stopped

  email-service:
    build:
      context: .
      dockerfile: apps/email-service/Dockerfile
    env_file:
      - .env
    ports:
      - "${GRPC_EMAIL_SERVICE_PORT}:7081"
    volumes:
      - ./shared:/app/shared:ro
    networks:
      - app-network
    restart: unless-stopped

  weather-service:
    build:
      context: .
      dockerfile: apps/weather-service/Dockerfile
    env_file:
      - .env
    ports:
      - "${HTTP_WEATHER_SERVICE_PORT}:7083"
      - "${GRPC_WEATHER_SERVICE_PORT}:7084"
    depends_on:
      - cache
    volumes:
      - ./apps/weather-service/logs:/app/logs
      - ./shared:/app/shared:ro
    networks:
      - app-network
    restart: unless-stopped

  db:
    image: postgres:16.4
    restart: always
    container_name: weather-notify
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DATABASE_PORT}:5432"
    networks:
      - app-network

  cache:
    image: redis:7-alpine
    container_name: weather-cache
    ports:
      - "6379:6379"
    volumes:
      - cache_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - app-network

volumes:
  postgres_data:
  cache_data:

networks:
  app-network:
    driver: bridge
